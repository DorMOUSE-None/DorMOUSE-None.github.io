<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CGlib on Utop&#39;s Blog</title>
    <link>https://www.ffutop.com/tags/cglib/</link>
    <description>Recent content in CGlib on Utop&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>2018-2020 © ffutop</copyright>
    <lastBuildDate>Fri, 13 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.ffutop.com/tags/cglib/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何方便地获取 CGlib 生成类</title>
      <link>https://www.ffutop.com/posts/2018-07-13-how-to-easily-get-cglib-generated-code/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.ffutop.com/posts/2018-07-13-how-to-easily-get-cglib-generated-code/</guid>
      <description>&lt;h2 id=&#34;配置参数&#34;&gt;配置参数&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;命令行使用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在 java 启动命令中添加参数配置项 &lt;code&gt;-Dcglib.debugLocation=&amp;lt;Custom Path&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;编码实现&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在执行 CGlib 获取新生成类之前，调用 &lt;code&gt;System.setProperty(&amp;quot;cglib.debugLocation&amp;quot;, &amp;lt;Custom Path&amp;gt;)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CGlib Enhancer 主流程源码解析</title>
      <link>https://www.ffutop.com/posts/2018-07-10-cglib-enhancer/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.ffutop.com/posts/2018-07-10-cglib-enhancer/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;此博文写作的目的:
  - (Core) 通过了解 CGlib Enhancer 的整个调用链，了解其对于唯一依赖的 ASM 库的调用方式。
  - 基于 Enhancer 对已有字节码进行增强的进一步理解与掌握。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>