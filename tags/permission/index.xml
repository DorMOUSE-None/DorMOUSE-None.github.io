<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Permission on Utop&#39;s Blog</title>
    <link>https://www.ffutop.com/tags/permission/</link>
    <description>Recent content in Permission on Utop&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cmn-Hans-CN</language>
    <lastBuildDate>Wed, 04 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.ffutop.com/tags/permission/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java 安全访问与权限控制</title>
      <link>https://www.ffutop.com/posts/2018-07-04-java-%E5%AE%89%E5%85%A8%E8%AE%BF%E9%97%AE%E4%B8%8E%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.ffutop.com/posts/2018-07-04-java-%E5%AE%89%E5%85%A8%E8%AE%BF%E9%97%AE%E4%B8%8E%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;绪论&#34;&gt;绪论&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;本文只是对 Java 安全访问与权限控制的基础性探究。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本节与全文内容无关，如无兴趣阅读，可以跳过&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;了解 Java 安全访问相关内容的初衷，是准备在项目中利用 Java 标准库提供的 ServiceLoader 对 SPI 实现类进行&amp;quot;自动发现&amp;quot;和加载。
这对于将本项目作为二方库来依赖的上层项目将更为方便，只需要&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;META-INF.services&lt;/code&gt; 目录下配置被命名为 SPI 接口全限定名的文件及添加相关内容&lt;/li&gt;
&lt;li&gt;由项目的注册管理器触发下列 Java 代码&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    ServiceLoader&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;XxxPolicy&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; xxxPolicyServiceLoader &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ServiceLoader&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;XxxPolicy&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Iterator&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;XxxPolicy&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; it &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xxxPolicyServiceLoader&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;iterator&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt; it&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;hasNext&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        XxxPolicy xxxPolicy &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; it&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// ... more code ...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就可以完成一个新的 SPI 策略的注册工作。&lt;/p&gt;
&lt;p&gt;但是，在尝试实现，了解了 ServiceLoader 源码，以及 DriverManager 和 mysql-connection-java-&lt;!-- raw HTML omitted --&gt;.jar 在注册 Driver 相关的代码。
发现怎么也绕不开 Java 安全访问相关的内容。诸如下列这段来自 DriverManager.loadInitialDrivers() 的代码:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;AccessController&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;doPrivileged&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; PrivilegedAction&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;Void&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; Void &lt;span style=&#34;color:#06287e&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

        ServiceLoader&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;Driver&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; loadedDrivers &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ServiceLoader&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        Iterator&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;Driver&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; driversIterator &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; loadedDrivers&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;iterator&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;try&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;driversIterator&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;hasNext&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            driversIterator&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Throwable t&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Do nothing
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;诸如 AccessController, Permission, SecurityManager 的代码始终是一个绕不开的主旋律。&lt;/p&gt;
&lt;p&gt;为了探究这部分控制对项目中 ServiceLoader 的真正作用以及其编码意义，开始了对本文所描述的主体内容的初步了解。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>