<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>指数爆炸 on Utop&#39;s Blog</title>
    <link>https://www.ffutop.com/tags/%E6%8C%87%E6%95%B0%E7%88%86%E7%82%B8/</link>
    <description>Recent content in 指数爆炸 on Utop&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>2018-2020 © ffutop</copyright>
    <lastBuildDate>Fri, 16 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.ffutop.com/tags/%E6%8C%87%E6%95%B0%E7%88%86%E7%82%B8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>正则表达式指数爆炸</title>
      <link>https://www.ffutop.com/posts/2018-11-16-regex-exponential-explosion/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.ffutop.com/posts/2018-11-16-regex-exponential-explosion/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;昨天接触到一个很有意思的问题, 公司测试环境一台机器 CPU 跑到了 400%，导致该机器上的所有服务都挂掉了。&lt;/p&gt;

&lt;p&gt;最后查到的原因竟然是正则表达式所引起的，大大出乎意料啊。虽然早就知道正则效率很差，但绝对没有想到会导致整个机器上服务崩溃的情况。&lt;/p&gt;

&lt;p&gt;先简单展示下问题正则:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String regex = &amp;quot;(\\w+,?)+&amp;quot;;
String val = &amp;quot;abcdefghijklmno,abcdefghijklmno+&amp;quot;;
System.out.println(val.matches(regex));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最终的执行时间是 17s 左右。&lt;/p&gt;

&lt;p&gt;相反，如果改成 &lt;code&gt;String val = &amp;quot;abcdefghijklmno,abcdefghijklmno&amp;quot;&lt;/code&gt; ，实际执行时间 1ms 左右。&lt;/p&gt;

&lt;p&gt;哈哈，完全不是一个量级的结果。&lt;/p&gt;

&lt;p&gt;最后，当然是要找原因了:&amp;lt; 当然，有其它重要的事在耽搁，没时间去看 Java Regex 源码。不过，从正则本身下手反而是个好事情。毕竟几乎所有的编程语言都有对正则的支持。而同样的，都存在着这样的问题。那就可以大胆猜想其实是和语言本身无关，而在于正则规范本身了。&lt;/p&gt;

&lt;p&gt;先给个结果，罪魁祸首就是&lt;code&gt;指数爆炸&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>